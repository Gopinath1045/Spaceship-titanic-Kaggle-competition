{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2022-03-11T03:00:45.040735Z","iopub.execute_input":"2022-03-11T03:00:45.041294Z","iopub.status.idle":"2022-03-11T03:00:45.051469Z","shell.execute_reply.started":"2022-03-11T03:00:45.041254Z","shell.execute_reply":"2022-03-11T03:00:45.050202Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#import require libaries","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\npd.pandas.set_option('display.max_columns',None)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:46.303626Z","iopub.execute_input":"2022-03-11T03:00:46.304265Z","iopub.status.idle":"2022-03-11T03:00:46.31319Z","shell.execute_reply.started":"2022-03-11T03:00:46.304209Z","shell.execute_reply":"2022-03-11T03:00:46.312115Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:46.73051Z","iopub.execute_input":"2022-03-11T03:00:46.730886Z","iopub.status.idle":"2022-03-11T03:00:46.737941Z","shell.execute_reply.started":"2022-03-11T03:00:46.730849Z","shell.execute_reply":"2022-03-11T03:00:46.737016Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#import the dataset","metadata":{}},{"cell_type":"code","source":"df1=pd.read_csv(\"/kaggle/input/spaceship-titanic/train.csv\")\ndf2=pd.read_csv(\"/kaggle/input/spaceship-titanic/test.csv\")\nprint(df1.shape)\ndf1.head()","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:47.736301Z","iopub.execute_input":"2022-03-11T03:00:47.736659Z","iopub.status.idle":"2022-03-11T03:00:47.813245Z","shell.execute_reply.started":"2022-03-11T03:00:47.736591Z","shell.execute_reply":"2022-03-11T03:00:47.812464Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#here y is Transported (dependent)\n#first we handle train data(df1)","metadata":{"execution":{"iopub.status.busy":"2022-03-09T11:29:50.595091Z","iopub.execute_input":"2022-03-09T11:29:50.595395Z","iopub.status.idle":"2022-03-09T11:29:50.59891Z","shell.execute_reply.started":"2022-03-09T11:29:50.595352Z","shell.execute_reply":"2022-03-09T11:29:50.59838Z"}}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"#to see the null values by using heat map\nsns.heatmap(df1.isnull(),yticklabels=False, cbar=False,cmap='viridis')","metadata":{"execution":{"iopub.status.busy":"2022-03-09T11:29:57.969199Z","iopub.execute_input":"2022-03-09T11:29:57.969655Z","iopub.status.idle":"2022-03-09T11:29:58.390739Z","shell.execute_reply.started":"2022-03-09T11:29:57.969619Z","shell.execute_reply":"2022-03-09T11:29:58.38962Z"}}},{"cell_type":"code","source":"## Let us capture all the nan values\n## First lets handle Categorical features which are missing\nfeatures_nan=[feature for feature in df1.columns if df1[feature].isnull().sum()>1 and df1[feature].dtypes=='O']\n\nfor feature in features_nan:\n    print(\"{}: {}% missing values\".format(feature,np.round(df1[feature].isnull().mean(),4)))","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:49.418448Z","iopub.execute_input":"2022-03-11T03:00:49.419149Z","iopub.status.idle":"2022-03-11T03:00:49.449896Z","shell.execute_reply.started":"2022-03-11T03:00:49.419088Z","shell.execute_reply":"2022-03-11T03:00:49.449023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#will see collinarity between data columns\nsns.heatmap(df1.corr(),annot=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:49.805368Z","iopub.execute_input":"2022-03-11T03:00:49.805662Z","iopub.status.idle":"2022-03-11T03:00:50.362221Z","shell.execute_reply.started":"2022-03-11T03:00:49.80563Z","shell.execute_reply":"2022-03-11T03:00:50.361355Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#handle missing values","metadata":{"execution":{"iopub.status.busy":"2022-03-09T11:30:58.340053Z","iopub.execute_input":"2022-03-09T11:30:58.340971Z","iopub.status.idle":"2022-03-09T11:30:58.344992Z","shell.execute_reply.started":"2022-03-09T11:30:58.340911Z","shell.execute_reply":"2022-03-09T11:30:58.344337Z"}}},{"cell_type":"code","source":"df1['HomePlanet'].fillna(df1['HomePlanet'].mode()[0], inplace=True)\ndf2['HomePlanet'].fillna(df2['HomePlanet'].mode()[0], inplace=True)\ndf1['CryoSleep'].fillna(df1['CryoSleep'].mode()[0], inplace=True)\ndf2['CryoSleep'].fillna(df2['CryoSleep'].mode()[0], inplace=True)\ndf1['Age'].fillna(df1['Age'].mean(), inplace=True)\ndf2['Age'].fillna(df2['Age'].mean(), inplace=True)\ndf1['VIP'].fillna(df1['VIP'].mode()[0], inplace=True)\ndf2['VIP'].fillna(df2['VIP'].mode()[0], inplace=True)\ndf1['RoomService'].fillna(df1['RoomService'].mean(), inplace=True)\ndf2['RoomService'].fillna(df2['RoomService'].mean(), inplace=True)\n\ndf1['PassengerId']=df1['PassengerId'].astype(int)\ndf2['PassengerId']=df2['PassengerId'].astype(int)\ndf1['VRDeck'].fillna(df1['VRDeck'].mean(), inplace=True)\ndf2['VRDeck'].fillna(df2['VRDeck'].mean(), inplace=True)\ndf1['Spa'].fillna(df1['Spa'].mean(), inplace=True)\ndf2['Spa'].fillna(df2['Spa'].mean(), inplace=True)\ndf1['Destination'].fillna(df1['Destination'].mode()[0], inplace=True)\ndf2['Destination'].fillna(df2['Destination'].mode()[0], inplace=True)\ndf1['FoodCourt'].fillna(df1['FoodCourt'].mean(), inplace=True)\ndf2['FoodCourt'].fillna(df2['FoodCourt'].mean(), inplace=True)\ndf1['ShoppingMall'].fillna(df1['ShoppingMall'].mean(), inplace=True)\ndf2['ShoppingMall'].fillna(df2['ShoppingMall'].mean(), inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:50.681515Z","iopub.execute_input":"2022-03-11T03:00:50.681827Z","iopub.status.idle":"2022-03-11T03:00:50.730269Z","shell.execute_reply.started":"2022-03-11T03:00:50.681772Z","shell.execute_reply":"2022-03-11T03:00:50.729531Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#no need of Name column to train the data\n#so we drop the name column\ndf1.drop(['Name'],axis=1, inplace=True)\ndf2.drop(['Name'],axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:51.126719Z","iopub.execute_input":"2022-03-11T03:00:51.127166Z","iopub.status.idle":"2022-03-11T03:00:51.136256Z","shell.execute_reply.started":"2022-03-11T03:00:51.127101Z","shell.execute_reply":"2022-03-11T03:00:51.134999Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#no need of passenger id  column to train the data\n#so we drop the passenger column\ndf1.drop(['PassengerId'],axis=1, inplace=True)\ndf2.drop(['PassengerId'],axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:51.527145Z","iopub.execute_input":"2022-03-11T03:00:51.527431Z","iopub.status.idle":"2022-03-11T03:00:51.536262Z","shell.execute_reply.started":"2022-03-11T03:00:51.527402Z","shell.execute_reply":"2022-03-11T03:00:51.535215Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#we can only Cabin column is not fixed , we will try to fix that data also","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:51.902386Z","iopub.execute_input":"2022-03-11T03:00:51.90309Z","iopub.status.idle":"2022-03-11T03:00:51.907323Z","shell.execute_reply.started":"2022-03-11T03:00:51.903049Z","shell.execute_reply":"2022-03-11T03:00:51.906281Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# split column and add new columns to df\ndf1[['Deck', 'Num', 'Side']] = df1['Cabin'].str.split('/', expand=True)\ndf2[['Deck', 'Num', 'Side']] = df2['Cabin'].str.split('/', expand=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:52.246947Z","iopub.execute_input":"2022-03-11T03:00:52.247884Z","iopub.status.idle":"2022-03-11T03:00:52.281685Z","shell.execute_reply.started":"2022-03-11T03:00:52.247846Z","shell.execute_reply":"2022-03-11T03:00:52.28101Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#drop cabin column\ndf1.drop(['Cabin'],axis=1, inplace=True)\ndf2.drop(['Cabin'],axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:52.617468Z","iopub.execute_input":"2022-03-11T03:00:52.617997Z","iopub.status.idle":"2022-03-11T03:00:52.628875Z","shell.execute_reply.started":"2022-03-11T03:00:52.617932Z","shell.execute_reply":"2022-03-11T03:00:52.628009Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df1['Side'].fillna(df1['Side'].mode()[0], inplace=True)\ndf2['Side'].fillna(df2['Side'].mode()[0], inplace=True)\ndf1['Deck'].fillna(df1['Deck'].mode()[0], inplace=True)\ndf2['Deck'].fillna(df2['Deck'].mode()[0], inplace=True)\ndf1['Num'].fillna(df1['Num'].median(), inplace=True)\ndf2['Num'].fillna(df2['Num'].median(), inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:53.017196Z","iopub.execute_input":"2022-03-11T03:00:53.018089Z","iopub.status.idle":"2022-03-11T03:00:53.041772Z","shell.execute_reply.started":"2022-03-11T03:00:53.018037Z","shell.execute_reply":"2022-03-11T03:00:53.041144Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df1.dtypes","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:53.622591Z","iopub.execute_input":"2022-03-11T03:00:53.62322Z","iopub.status.idle":"2022-03-11T03:00:53.631337Z","shell.execute_reply.started":"2022-03-11T03:00:53.623171Z","shell.execute_reply":"2022-03-11T03:00:53.630446Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#we convert using label encoder and map method","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder= LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:54.294634Z","iopub.execute_input":"2022-03-11T03:00:54.294981Z","iopub.status.idle":"2022-03-11T03:00:54.299938Z","shell.execute_reply.started":"2022-03-11T03:00:54.294897Z","shell.execute_reply":"2022-03-11T03:00:54.298772Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"label_encoder","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:54.60032Z","iopub.execute_input":"2022-03-11T03:00:54.600596Z","iopub.status.idle":"2022-03-11T03:00:54.607566Z","shell.execute_reply.started":"2022-03-11T03:00:54.600568Z","shell.execute_reply":"2022-03-11T03:00:54.606924Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"#label encoder converts default into int\ndf1['HomePlanet']=label_encoder.fit_transform(df1['HomePlanet'])","metadata":{}},{"cell_type":"code","source":"#label encoder converts default into int\ndf1['HomePlanet']=label_encoder.fit_transform(df1['HomePlanet'])\ndf1['CryoSleep']=label_encoder.fit_transform(df1['CryoSleep']).astype(int)\n\ndf1['Destination']=label_encoder.fit_transform(df1['Destination'])\ndf1['VIP']=label_encoder.fit_transform(df1['VIP'])\ndf1['Deck']=label_encoder.fit_transform(df1['Deck'])\ndf2['Deck']=label_encoder.fit_transform(df2['Deck'])\ndf1['Side']=label_encoder.fit_transform(df1['Side'])\ndf1['Num']=df1['Num'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:55.541357Z","iopub.execute_input":"2022-03-11T03:00:55.541857Z","iopub.status.idle":"2022-03-11T03:00:55.568085Z","shell.execute_reply.started":"2022-03-11T03:00:55.541788Z","shell.execute_reply":"2022-03-11T03:00:55.567463Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df2['HomePlanet']=label_encoder.fit_transform(df2['HomePlanet'])\ndf2['CryoSleep']=label_encoder.fit_transform(df2['CryoSleep'])\n\ndf2['Destination']=label_encoder.fit_transform(df2['Destination'])\ndf2['VIP']=label_encoder.fit_transform(df2['VIP'])\ndf2['Side']=label_encoder.fit_transform(df2['Side'])\ndf2['Num']=df2['Num'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:55.857527Z","iopub.execute_input":"2022-03-11T03:00:55.857821Z","iopub.status.idle":"2022-03-11T03:00:55.87306Z","shell.execute_reply.started":"2022-03-11T03:00:55.857789Z","shell.execute_reply":"2022-03-11T03:00:55.872347Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Define X and y values","metadata":{}},{"cell_type":"code","source":"#transportted is the y value or dependent variable\ny=df1['Transported']\nX=df1.drop(['Transported'],axis=1)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:56.565279Z","iopub.execute_input":"2022-03-11T03:00:56.565598Z","iopub.status.idle":"2022-03-11T03:00:56.572533Z","shell.execute_reply.started":"2022-03-11T03:00:56.565562Z","shell.execute_reply":"2022-03-11T03:00:56.571782Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test= train_test_split(X, y, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:56.974612Z","iopub.execute_input":"2022-03-11T03:00:56.975021Z","iopub.status.idle":"2022-03-11T03:00:56.983106Z","shell.execute_reply.started":"2022-03-11T03:00:56.974989Z","shell.execute_reply":"2022-03-11T03:00:56.982407Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#logistic reression ","metadata":{"execution":{"iopub.status.busy":"2022-03-09T11:38:06.635996Z","iopub.execute_input":"2022-03-09T11:38:06.637082Z","iopub.status.idle":"2022-03-09T11:38:06.641729Z","shell.execute_reply.started":"2022-03-09T11:38:06.636988Z","shell.execute_reply":"2022-03-09T11:38:06.640906Z"}}},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nclg = LogisticRegression()\n# training the model\nclg.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:57.740332Z","iopub.execute_input":"2022-03-11T03:00:57.740924Z","iopub.status.idle":"2022-03-11T03:00:57.862267Z","shell.execute_reply.started":"2022-03-11T03:00:57.740871Z","shell.execute_reply":"2022-03-11T03:00:57.861191Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import cross_val_score\n\nscores = cross_val_score(clg, X_train, y_train, cv=10)\nprint('Cross-Validation Accuracy Scores', scores)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:58.421308Z","iopub.execute_input":"2022-03-11T03:00:58.42157Z","iopub.status.idle":"2022-03-11T03:00:59.873159Z","shell.execute_reply.started":"2022-03-11T03:00:58.42154Z","shell.execute_reply":"2022-03-11T03:00:59.872245Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#predict output\ny_pred = clg.predict(df2)\ny_pred_train = clg.predict(X_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:59.875154Z","iopub.execute_input":"2022-03-11T03:00:59.875706Z","iopub.status.idle":"2022-03-11T03:00:59.894195Z","shell.execute_reply.started":"2022-03-11T03:00:59.875658Z","shell.execute_reply":"2022-03-11T03:00:59.892893Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:00:59.895949Z","iopub.execute_input":"2022-03-11T03:00:59.896603Z","iopub.status.idle":"2022-03-11T03:00:59.908366Z","shell.execute_reply.started":"2022-03-11T03:00:59.896545Z","shell.execute_reply":"2022-03-11T03:00:59.907271Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"finding accuracy","metadata":{}},{"cell_type":"code","source":"y_pred.shape","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:01.542089Z","iopub.execute_input":"2022-03-11T03:01:01.542989Z","iopub.status.idle":"2022-03-11T03:01:01.548708Z","shell.execute_reply.started":"2022-03-11T03:01:01.542942Z","shell.execute_reply":"2022-03-11T03:01:01.547826Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred_train ","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:02.133324Z","iopub.execute_input":"2022-03-11T03:01:02.13376Z","iopub.status.idle":"2022-03-11T03:01:02.139821Z","shell.execute_reply.started":"2022-03-11T03:01:02.133728Z","shell.execute_reply":"2022-03-11T03:01:02.138849Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#finding accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_test= accuracy_score(y_test, y_pred)\naccuracy_train=accuracy_score(y_train, y_pred_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:02.6406Z","iopub.execute_input":"2022-03-11T03:01:02.640888Z","iopub.status.idle":"2022-03-11T03:01:02.669583Z","shell.execute_reply.started":"2022-03-11T03:01:02.640854Z","shell.execute_reply":"2022-03-11T03:01:02.668565Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy_test","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:03.101462Z","iopub.execute_input":"2022-03-11T03:01:03.101724Z","iopub.status.idle":"2022-03-11T03:01:03.107975Z","shell.execute_reply.started":"2022-03-11T03:01:03.101696Z","shell.execute_reply":"2022-03-11T03:01:03.107154Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy_train","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:03.577371Z","iopub.execute_input":"2022-03-11T03:01:03.57766Z","iopub.status.idle":"2022-03-11T03:01:03.584257Z","shell.execute_reply.started":"2022-03-11T03:01:03.57763Z","shell.execute_reply":"2022-03-11T03:01:03.583217Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncf = confusion_matrix(y_test, y_pred)\nplt.figure()\nsns.heatmap(cf, annot=True)\nplt.xlabel('Prediction')\nplt.ylabel('Target')\nplt.title('Confusion Matrix')","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:04.758439Z","iopub.execute_input":"2022-03-11T03:01:04.758726Z","iopub.status.idle":"2022-03-11T03:01:04.783842Z","shell.execute_reply.started":"2022-03-11T03:01:04.758696Z","shell.execute_reply":"2022-03-11T03:01:04.782936Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#2 random forest","metadata":{"execution":{"iopub.status.busy":"2022-03-09T11:39:55.905637Z","iopub.execute_input":"2022-03-09T11:39:55.905956Z","iopub.status.idle":"2022-03-09T11:39:55.911074Z","shell.execute_reply.started":"2022-03-09T11:39:55.905924Z","shell.execute_reply":"2022-03-09T11:39:55.909878Z"}}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification\nX, y = make_classification(n_samples=1000, n_features=13, n_informative=2, n_redundant=0,random_state=0, shuffle=False)\nran= RandomForestClassifier(max_depth=4, random_state=0)\nran.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:06.135608Z","iopub.execute_input":"2022-03-11T03:01:06.136186Z","iopub.status.idle":"2022-03-11T03:01:06.569209Z","shell.execute_reply.started":"2022-03-11T03:01:06.136138Z","shell.execute_reply":"2022-03-11T03:01:06.568291Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(ran.predict([[1,0,2,35.0,1,109.0,9.0,25.0,549.0,44.0,5,0,1]]))","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:09.216458Z","iopub.execute_input":"2022-03-11T03:01:09.216915Z","iopub.status.idle":"2022-03-11T03:01:09.237505Z","shell.execute_reply.started":"2022-03-11T03:01:09.216867Z","shell.execute_reply":"2022-03-11T03:01:09.236896Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = ran.predict(X_test)\ny_pred_train = ran.predict(X_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:12.689296Z","iopub.execute_input":"2022-03-11T03:01:12.689719Z","iopub.status.idle":"2022-03-11T03:01:12.782217Z","shell.execute_reply.started":"2022-03-11T03:01:12.689683Z","shell.execute_reply":"2022-03-11T03:01:12.781306Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:13.725712Z","iopub.execute_input":"2022-03-11T03:01:13.726003Z","iopub.status.idle":"2022-03-11T03:01:13.73253Z","shell.execute_reply.started":"2022-03-11T03:01:13.725971Z","shell.execute_reply":"2022-03-11T03:01:13.731545Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred_train","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:14.175828Z","iopub.execute_input":"2022-03-11T03:01:14.176624Z","iopub.status.idle":"2022-03-11T03:01:14.181977Z","shell.execute_reply.started":"2022-03-11T03:01:14.176575Z","shell.execute_reply":"2022-03-11T03:01:14.181189Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncf = confusion_matrix(y_test, y_pred)\nplt.figure()\nsns.heatmap(cf, annot=True)\nplt.xlabel('Prediction')\nplt.ylabel('Target')\nplt.title('Confusion Matrix')\n","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:14.652001Z","iopub.execute_input":"2022-03-11T03:01:14.652494Z","iopub.status.idle":"2022-03-11T03:01:14.856171Z","shell.execute_reply.started":"2022-03-11T03:01:14.652439Z","shell.execute_reply":"2022-03-11T03:01:14.855195Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\naccuracy_test= accuracy_score(y_test, y_pred)\naccuracy_train=accuracy_score(y_train, y_pred_train)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:15.041503Z","iopub.execute_input":"2022-03-11T03:01:15.041772Z","iopub.status.idle":"2022-03-11T03:01:15.049477Z","shell.execute_reply.started":"2022-03-11T03:01:15.041745Z","shell.execute_reply":"2022-03-11T03:01:15.04861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy_test","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:15.938727Z","iopub.execute_input":"2022-03-11T03:01:15.939265Z","iopub.status.idle":"2022-03-11T03:01:15.945005Z","shell.execute_reply.started":"2022-03-11T03:01:15.939206Z","shell.execute_reply":"2022-03-11T03:01:15.944114Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy_train","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:16.007808Z","iopub.execute_input":"2022-03-11T03:01:16.00814Z","iopub.status.idle":"2022-03-11T03:01:16.013572Z","shell.execute_reply.started":"2022-03-11T03:01:16.008092Z","shell.execute_reply":"2022-03-11T03:01:16.012886Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import cross_val_score\n\nscores = cross_val_score(ran, X_train, y_train, cv=10)\nprint('Cross-Validation Accuracy Scores', scores)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:16.279036Z","iopub.execute_input":"2022-03-11T03:01:16.279478Z","iopub.status.idle":"2022-03-11T03:01:20.435192Z","shell.execute_reply.started":"2022-03-11T03:01:16.279448Z","shell.execute_reply":"2022-03-11T03:01:20.434552Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"score_final=scores.mean()","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.436457Z","iopub.execute_input":"2022-03-11T03:01:20.437382Z","iopub.status.idle":"2022-03-11T03:01:20.441137Z","shell.execute_reply.started":"2022-03-11T03:01:20.437335Z","shell.execute_reply":"2022-03-11T03:01:20.440307Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"score_final","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.442238Z","iopub.execute_input":"2022-03-11T03:01:20.442435Z","iopub.status.idle":"2022-03-11T03:01:20.45553Z","shell.execute_reply.started":"2022-03-11T03:01:20.44241Z","shell.execute_reply":"2022-03-11T03:01:20.454417Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncf = confusion_matrix(y_test, y_pred)\nplt.figure()\nsns.heatmap(cf, annot=True)\nplt.xlabel('Prediction')\nplt.ylabel('Target')\nplt.title('Confusion Matrix')","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.458002Z","iopub.execute_input":"2022-03-11T03:01:20.458505Z","iopub.status.idle":"2022-03-11T03:01:20.716068Z","shell.execute_reply.started":"2022-03-11T03:01:20.45846Z","shell.execute_reply":"2022-03-11T03:01:20.714781Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#submission file\nsubm=pd.read_csv('../input/spaceship-titanic/sample_submission.csv')\nsubm.head()","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.717873Z","iopub.execute_input":"2022-03-11T03:01:20.718217Z","iopub.status.idle":"2022-03-11T03:01:20.738414Z","shell.execute_reply.started":"2022-03-11T03:01:20.718176Z","shell.execute_reply":"2022-03-11T03:01:20.737217Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"subm.shape","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.740186Z","iopub.execute_input":"2022-03-11T03:01:20.74069Z","iopub.status.idle":"2022-03-11T03:01:20.7482Z","shell.execute_reply.started":"2022-03-11T03:01:20.740646Z","shell.execute_reply":"2022-03-11T03:01:20.746509Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\nimport pickle\nfilename='finalizedmodel.pkl'\npickle.dump(RandomForestClassifier,open(filename, 'wb'))","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.749807Z","iopub.execute_input":"2022-03-11T03:01:20.750312Z","iopub.status.idle":"2022-03-11T03:01:20.75848Z","shell.execute_reply.started":"2022-03-11T03:01:20.750265Z","shell.execute_reply":"2022-03-11T03:01:20.757623Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pred=pd.DataFrame(y_pred,columns=['Transported'])\nsub_df=pd.read_csv('../input/spaceship-titanic/sample_submission.csv')\nsub=sub_df.drop(['Transported'],axis=1)\nsub_final=pd.concat([sub,pred], axis=1)\n","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:20.814602Z","iopub.execute_input":"2022-03-11T03:01:20.815335Z","iopub.status.idle":"2022-03-11T03:01:20.827848Z","shell.execute_reply.started":"2022-03-11T03:01:20.815294Z","shell.execute_reply":"2022-03-11T03:01:20.826989Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sub_final.shape","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:21.520754Z","iopub.execute_input":"2022-03-11T03:01:21.521887Z","iopub.status.idle":"2022-03-11T03:01:21.527596Z","shell.execute_reply.started":"2022-03-11T03:01:21.521839Z","shell.execute_reply":"2022-03-11T03:01:21.526747Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"submission file","metadata":{}},{"cell_type":"code","source":"sub_final.to_csv('./submission.csv',index=False)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:22.727969Z","iopub.execute_input":"2022-03-11T03:01:22.728247Z","iopub.status.idle":"2022-03-11T03:01:22.743469Z","shell.execute_reply.started":"2022-03-11T03:01:22.728218Z","shell.execute_reply":"2022-03-11T03:01:22.742544Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"subm.tail(50)","metadata":{"execution":{"iopub.status.busy":"2022-03-11T03:01:23.849843Z","iopub.execute_input":"2022-03-11T03:01:23.850329Z","iopub.status.idle":"2022-03-11T03:01:23.865053Z","shell.execute_reply.started":"2022-03-11T03:01:23.850286Z","shell.execute_reply":"2022-03-11T03:01:23.864162Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}